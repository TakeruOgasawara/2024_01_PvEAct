//======================================================================================
//
// 入力処理[input.cpp]
// Author:Takeru Ogasawara
//
//======================================================================================
#include "input.h"
#include <stdio.h>

//***************************************************
// 静的メンバ変数宣言
//***************************************************
LPDIRECTINPUT8 CInput::m_pInput = nullptr;

//========================================================================
// コンストラクタ
//========================================================================
CInput::CInput()
{
	m_pDevice = nullptr;
}

//========================================================================
// デストラクタ
//========================================================================
CInput::~CInput()
{

}

//========================================================================
// 初期化処理
//========================================================================
HRESULT CInput::Init(HINSTANCE hInstance, HWND hWnd)
{
	if (m_pInput == nullptr)
	{
		//DirectInputオブジェクトの初期化
		if (FAILED(DirectInput8Create(hInstance, DIRECTINPUT_VERSION, IID_IDirectInput8, (void**)&m_pInput, NULL)))
		{
			return E_FAIL;
		}
	}

	return S_OK;
}

//========================================================================
// 終了処理
//========================================================================
void CInput::Uninit(void)
{
	//入力デバイス(キーボード)の破棄
	if (m_pDevice != nullptr)
	{
		m_pDevice->Unacquire();			//キーボードへのアクセス権を放棄
		m_pDevice->Release();
		m_pDevice = nullptr;
	}

	//Directinputオブジェクトの破棄
	if (m_pInput != nullptr)
	{
		m_pInput->Release();
		m_pInput = nullptr;
	}
}